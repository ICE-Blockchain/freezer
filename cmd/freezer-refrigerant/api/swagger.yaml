# SPDX-License-Identifier: ice License 1.0

basePath: /v1w
definitions:
  coindistribution.CoinDistributionsForReview:
    properties:
      cursor:
        example: 5065
        type: integer
      distributions:
        items:
          $ref: '#/definitions/coindistribution.PendingReview'
        type: array
      totalIce:
        example: 5065.3
        type: number
      totalRows:
        example: 5065
        type: integer
    type: object
  coindistribution.PendingReview:
    properties:
      ethAddress:
        example: 0x43....
        type: string
      ice:
        example: 1000
        type: number
      iceflakes:
        example: "100000000000000"
        type: string
      referredByUsername:
        example: myrefusername
        type: string
      time:
        example: "2022-01-03T16:20:52.156534Z"
        type: string
      userId:
        example: 12746386-03de-44d7-91c7-856fa66b6ed6
        type: string
      username:
        example: myusername
        type: string
    type: object
  main.FinalizeMiningBoostUpgradeRequestBody:
    properties:
      network:
        allOf:
        - $ref: '#/definitions/tokenomics.BlockchainNetworkType'
        enum:
        - arbitrum
        - bnb
        - ethereum
        example: ethereum
      txHash:
        example: 0xf75c78ab01ee4641be46794756f46137dea03a4980126dce4f2df933cccb34ea
        type: string
    type: object
  main.InitializeMiningBoostUpgradeRequestBody:
    properties:
      miningBoostLevelIndex:
        example: 0
        type: integer
    type: object
  main.StartNewMiningSessionRequestBody:
    properties:
      resurrect:
        description: |-
          Specify this if you want to resurrect the user.
          `true` recovers all the lost balance, `false` deletes it forever, `null/undefined` does nothing. Default is `null/undefined`.
        example: true
        type: boolean
      skipKYCSteps:
        description: |-
          Specify this if you want to skip one or more specific KYC steps before starting a new mining session or extending an existing one.
          Some KYC steps are not skippable.
        example:
        - 0
        - 1
        items:
          $ref: '#/definitions/users.KYCStep'
        type: array
    type: object
  main.StartOrUpdatePreStakingRequestBody:
    properties:
      allocation:
        example: 100
        maximum: 100
        type: integer
      years:
        example: 1
        maximum: 5
        type: integer
    type: object
  server.ErrorResponse:
    properties:
      code:
        example: SOMETHING_NOT_FOUND
        type: string
      data:
        additionalProperties: {}
        type: object
      error:
        example: something is missing
        type: string
    type: object
  tokenomics.BlockchainNetworkType:
    enum:
    - arbitrum
    - bnb
    - ethereum
    type: string
    x-enum-varnames:
    - ArbitrumBlockchainNetworkType
    - BNBBlockchainNetworkType
    - EthereumBlockchainNetworkType
  tokenomics.ExtraBonusSummary:
    properties:
      availableExtraBonus:
        example: 2
        type: number
    type: object
  tokenomics.MiningRateBonuses:
    properties:
      extra:
        example: 300
        type: number
      preStaking:
        example: 300
        type: number
      t1:
        example: 100
        type: number
      t2:
        example: 200
        type: number
      total:
        example: 300
        type: number
    type: object
  tokenomics.MiningRateSummary-string:
    properties:
      amount:
        example: 1,234,232.001
        type: string
      bonuses:
        $ref: '#/definitions/tokenomics.MiningRateBonuses'
    type: object
  tokenomics.MiningRateType:
    enum:
    - positive
    - negative
    - none
    type: string
    x-enum-varnames:
    - PositiveMiningRateType
    - NegativeMiningRateType
    - NoneMiningRateType
  tokenomics.MiningRates-tokenomics_MiningRateSummary-string:
    properties:
      base:
        $ref: '#/definitions/tokenomics.MiningRateSummary-string'
      positiveTotalNoPreStakingBonus:
        $ref: '#/definitions/tokenomics.MiningRateSummary-string'
      preStaking:
        $ref: '#/definitions/tokenomics.MiningRateSummary-string'
      standard:
        $ref: '#/definitions/tokenomics.MiningRateSummary-string'
      total:
        $ref: '#/definitions/tokenomics.MiningRateSummary-string'
      totalNoPreStakingBonus:
        $ref: '#/definitions/tokenomics.MiningRateSummary-string'
      type:
        $ref: '#/definitions/tokenomics.MiningRateType'
    type: object
  tokenomics.MiningSession:
    properties:
      endedAt:
        example: "2022-01-03T16:20:52.156534Z"
        type: string
      free:
        example: true
        type: boolean
      resettableStartingAt:
        example: "2022-01-03T16:20:52.156534Z"
        type: string
      startedAt:
        example: "2022-01-03T16:20:52.156534Z"
        type: string
      warnAboutExpirationStartingAt:
        example: "2022-01-03T16:20:52.156534Z"
        type: string
    type: object
  tokenomics.MiningSummary:
    properties:
      availableExtraBonus:
        example: 2
        type: number
      kycStepBlocked:
        allOf:
        - $ref: '#/definitions/users.KYCStep'
        example: 2
      miningRates:
        $ref: '#/definitions/tokenomics.MiningRates-tokenomics_MiningRateSummary-string'
      miningSession:
        $ref: '#/definitions/tokenomics.MiningSession'
      miningStarted:
        example: true
        type: boolean
      miningStreak:
        example: 2
        type: integer
      remainingFreeMiningSessions:
        example: 1
        type: integer
    type: object
  tokenomics.PendingMiningBoostUpgrade:
    properties:
      expiresAt:
        example: "2022-01-03T16:20:52.156534Z"
        type: string
      icePrice:
        example: "1234.1234"
        type: string
      paymentAddress:
        example: UQBLoASuwnSQVdsw4vZzkhCsN3bruqh68trjf03kHoooMc2k
        type: string
    type: object
  tokenomics.PreStakingSummary:
    properties:
      allocation:
        example: 100
        type: number
      bonus:
        example: 100
        type: number
      years:
        example: 1
        type: integer
    type: object
  users.KYCStep:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    type: integer
    x-enum-varnames:
    - NoneKYCStep
    - FacialRecognitionKYCStep
    - LivenessDetectionKYCStep
    - Social1KYCStep
    - QuizKYCStep
    - Social2KYCStep
    - Social3KYCStep
    - Social4KYCStep
    - Social5KYCStep
    - Social6KYCStep
    - Social7KYCStep
info:
  contact:
    name: ice.io
    url: https://ice.io
  description: API that handles everything related to write-only operations for user's
    tokenomics.
  title: Tokenomics API
  version: latest
paths:
  /getCoinDistributionsForReview:
    post:
      consumes:
      - application/json
      description: Fetches data of pending coin distributions for review.
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: the type of the client calling this API. I.E. `web`
        in: query
        name: x_client_type
        type: string
      - default: 0
        description: current cursor to fetch data from
        in: query
        name: cursor
        required: true
        type: integer
      - description: count of records in response, 5000 by default
        in: query
        name: limit
        type: integer
      - description: if u want to order by createdAt
        enum:
        - asc
        - desc
        in: query
        name: createdAtOrderBy
        type: string
      - description: if u want to order by ice amount
        enum:
        - asc
        - desc
        in: query
        name: iceOrderBy
        type: string
      - description: if u want to order by username lexicographically
        enum:
        - asc
        - desc
        in: query
        name: usernameOrderBy
        type: string
      - description: if u want to order by referredByUsername lexicographically
        enum:
        - asc
        - desc
        in: query
        name: referredByUsernameOrderBy
        type: string
      - description: if u want to find usernames starting with keyword
        in: query
        name: usernameKeyword
        type: string
      - description: if u want to find referredByUsernames starting with keyword
        in: query
        name: referredByUsernameKeyword
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/coindistribution.CoinDistributionsForReview'
        "401":
          description: if not authorized
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "403":
          description: if not allowed
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "422":
          description: if syntax fails
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "504":
          description: if request times out
          schema:
            $ref: '#/definitions/server.ErrorResponse'
      tags:
      - CoinDistribution
  /reviewDistributions:
    post:
      consumes:
      - application/json
      description: Reviews Coin Distributions.
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: the type of the client calling this API. I.E. `web`
        in: query
        name: x_client_type
        type: string
      - description: the decision for the current coin distributions
        enum:
        - approve
        - approve-and-process-immediately
        - deny
        in: query
        name: decision
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: if not authorized
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "403":
          description: if not allowed
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "422":
          description: if syntax fails
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "504":
          description: if request times out
          schema:
            $ref: '#/definitions/server.ErrorResponse'
      tags:
      - CoinDistribution
  /tokenomics/{userId}/extra-bonus-claims:
    post:
      consumes:
      - application/json
      description: Claims an extra bonus for the user.
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the user
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/tokenomics.ExtraBonusSummary'
        "400":
          description: if validations fail
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "401":
          description: if not authorized
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "403":
          description: if not allowed
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "404":
          description: if user not found or no extra bonus available
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "409":
          description: if already claimed
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "422":
          description: if syntax fails
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "504":
          description: if request times out
          schema:
            $ref: '#/definitions/server.ErrorResponse'
      tags:
      - Tokenomics
  /tokenomics/{userId}/mining-boosts:
    patch:
      consumes:
      - application/json
      description: Finalizes the process to enable a new mining boost tier.
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the user
        in: path
        name: userId
        required: true
        type: string
      - description: the type of the client calling this API. I.E. `web`
        in: query
        name: x_client_type
        type: string
      - description: Request params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.FinalizeMiningBoostUpgradeRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tokenomics.PendingMiningBoostUpgrade'
        "400":
          description: if validations fail
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "401":
          description: if not authorized
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "403":
          description: if not allowed
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "404":
          description: if user not found or process was not initialized
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "422":
          description: if syntax fails
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "504":
          description: if request times out
          schema:
            $ref: '#/definitions/server.ErrorResponse'
      tags:
      - Tokenomics
    put:
      consumes:
      - application/json
      description: Initializes the process to enable a new mining boost tier.
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the user
        in: path
        name: userId
        required: true
        type: string
      - description: the type of the client calling this API. I.E. `web`
        in: query
        name: x_client_type
        type: string
      - description: Request params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.InitializeMiningBoostUpgradeRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tokenomics.PendingMiningBoostUpgrade'
        "400":
          description: if validations fail
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "401":
          description: if not authorized
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "403":
          description: if not allowed
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "404":
          description: if user not found
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "422":
          description: if syntax fails
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "504":
          description: if request times out
          schema:
            $ref: '#/definitions/server.ErrorResponse'
      tags:
      - Tokenomics
  /tokenomics/{userId}/mining-sessions:
    post:
      consumes:
      - application/json
      description: Starts a new mining session for the user, if not already in progress
        with another one.
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the user
        in: path
        name: userId
        required: true
        type: string
      - description: the type of the client calling this API. I.E. `web`
        in: query
        name: x_client_type
        type: string
      - description: Request params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.StartNewMiningSessionRequestBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/tokenomics.MiningSummary'
        "400":
          description: if validations fail
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "401":
          description: if not authorized
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "403":
          description: if not allowed
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "404":
          description: if user not found
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "409":
          description: if mining is in progress or if a decision about negative mining
            progress or kyc is required
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "422":
          description: if syntax fails
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "504":
          description: if request times out
          schema:
            $ref: '#/definitions/server.ErrorResponse'
      tags:
      - Tokenomics
  /tokenomics/{userId}/pre-staking:
    put:
      consumes:
      - application/json
      description: Starts or updates pre-staking for the user.
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the user
        in: path
        name: userId
        required: true
        type: string
      - description: Request params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.StartOrUpdatePreStakingRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tokenomics.PreStakingSummary'
        "400":
          description: if validations fail
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "401":
          description: if not authorized
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "403":
          description: if not allowed
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "404":
          description: user not found
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "422":
          description: if syntax fails
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorResponse'
        "504":
          description: if request times out
          schema:
            $ref: '#/definitions/server.ErrorResponse'
      tags:
      - Tokenomics
schemes:
- https
swagger: "2.0"
